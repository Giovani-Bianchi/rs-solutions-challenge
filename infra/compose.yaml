services:
    backend:
        container_name: backend
        restart: always
        build:
            context: ..
            dockerfile: infra/dockerfile.backend
        environment:
            - WATCHPACK_POLLING=true
        ports:
            - 3001:3001
        volumes:
            - ../back-end/:/back-end
            - /back-end/node_modules
        depends_on:
            - database
        command: npm run start:dev

    frontend:
        container_name: frontend
        restart: always
        build:
            context: ..
            dockerfile: infra/dockerfile.frontend
        environment:
            - WATCHPACK_POLLING=true
        ports:
            - 3000:3000
        volumes:
            - ../front-end/:/front-end
            - /front-end/node_modules
        depends_on:
            - backend
        command: npm run dev
    database:
        container_name: postgres-db
        image: postgres:17
        restart: always
        env_file:
            - ../.env
        ports:
            - 5432:5432
        volumes:
            - postgres-db_data:/var/lib/postgresql/data
            - ./scripts/create.sql:/docker-entrypoint-initdb.d/init.sql
    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4
        env_file:
            - ../.env
        ports:
            - 8080:80
        volumes:
            - pgadmin_data:/var/lib/pgadmin

volumes:
    pgadmin_data:
    postgres-db_data:
